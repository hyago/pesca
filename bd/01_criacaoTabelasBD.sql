--SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
--SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
--SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- ALTERADO: T_ESPECIE_CAPTURADA SPC_PESO(KG) -> SPC_PESO_KG

DROP TABLE T_ALTERACAOSENHA CASCADE;
DROP TABLE T_AREAPESCA CASCADE;
DROP TABLE T_AREAPESCA_HAS_T_PESCADOR CASCADE;
DROP TABLE T_ARTEPESCA CASCADE;
DROP TABLE T_COLONIA CASCADE;
DROP TABLE T_COMUNIDADE CASCADE;
DROP TABLE T_DADOS_CALAO CASCADE;
DROP TABLE T_DADOS_EMALHE CASCADE;
DROP TABLE T_DADOS_TARRAFA CASCADE;
DROP TABLE T_ENDERECO CASCADE;
DROP TABLE T_ENTREVISTA_PESCADOR CASCADE;
DROP TABLE T_ESCOLARIDADE CASCADE;
DROP TABLE T_ESPECIE CASCADE;
DROP TABLE T_FAMILIA CASCADE;
DROP TABLE T_FICHA_DIARIA CASCADE;
DROP TABLE T_GENERO CASCADE;
DROP TABLE T_GRUPO CASCADE;
DROP TABLE T_HISTORICORECADASTRAMENTO CASCADE;
DROP TABLE T_ISCA CASCADE;
DROP TABLE T_LOGIN CASCADE;
DROP TABLE T_MARE CASCADE;
DROP TABLE T_MONITORAMENTO CASCADE;
DROP TABLE T_MUNICIPIO CASCADE;
DROP TABLE T_ORDEM CASCADE;
DROP TABLE T_PERFIL CASCADE;
DROP TABLE T_PESCADOR CASCADE;
DROP TABLE T_PESCADOR_HAS_T_COLONIA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_COMUNIDADE CASCADE;
DROP TABLE T_PESCADOR_HAS_T_EMBARCACAO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_ENDERECO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_ESCOLARIDADE CASCADE;
DROP TABLE T_PESCADOR_HAS_T_ESPECIECAPTURADAS CASCADE;
DROP TABLE T_PESCADOR_HAS_T_PROGRAMASOCIAL CASCADE;
DROP TABLE T_PESCADOR_HAS_T_RENDA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_TELEFONECONTATO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_TIPOARTEPESCA CASCADE;
DROP TABLE T_PESCADOR_HAS_TT_DEPENDENTE CASCADE;
DROP TABLE T_PORTEEMBARCACAO CASCADE;
DROP TABLE T_PORTO CASCADE;
DROP TABLE T_PROGRAMASOCIAL CASCADE;
DROP TABLE T_RENDA CASCADE;
DROP TABLE T_SITUACAO CASCADE;
DROP TABLE T_SUBAMOSTRA CASCADE;
DROP TABLE T_TELEFONECONTATO CASCADE;
DROP TABLE T_TEMPO CASCADE;
DROP TABLE T_TIPOCAPTURADA CASCADE;
DROP TABLE T_TIPODEPENDENTE CASCADE;
DROP TABLE T_TIPOEMBARCACAO CASCADE;
DROP TABLE T_TIPOTEL CASCADE;
DROP TABLE T_UF CASCADE;
DROP TABLE T_USUARIO CASCADE;
DROP TABLE T_USUARIO_HAS_T_TELEFONECONTATO CASCADE;
DROP TABLE T_VENTO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_AREAPESCA CASCADE;
DROP TABLE T_TIPORENDA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_TIPODEPENDENTE CASCADE;
DROP TABLE T_ESP_ARTE_PESCA CASCADE;
DROP TABLE T_ARRASTOFUNDO CASCADE;
DROP TABLE T_PESQUEIRO_AF CASCADE;
DROP TABLE T_REDE CASCADE;
DROP TABLE T_PESCALINHA CASCADE;
DROP TABLE T_MARISCAGEM CASCADE;
DROP TABLE T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE T_PESCADOR_HAS_TELEFONE CASCADE;
DROP VIEW v_monitoramentobyficha CASCADE;

-- -----------------------------------------------------
-- TABLE T_UF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_UF (
 TUF_SIGLA VARCHAR(2) NOT NULL,
 TUF_NOME VARCHAR(25) NOT NULL,
 PRIMARY KEY (TUF_SIGLA)
 );

-- -----------------------------------------------------
-- TABLE T_MUNICIPIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MUNICIPIO (
 TMUN_ID SERIAL,
 TMUN_MUNICIPIO VARCHAR(50) NOT NULL,
 TUF_SIGLA VARCHAR(2) NOT NULL,
 PRIMARY KEY (TMUN_ID),
 CONSTRAINT FK_T_MUNICIPIO_T_UF FOREIGN KEY (TUF_SIGLA) REFERENCES T_UF (TUF_SIGLA)
);

-- -----------------------------------------------------
-- TABLE T_ENDERECO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ENDERECO (
 TE_ID SERIAL,
 TE_LOGRADOURO VARCHAR(100) NULL,
 TE_NUMERO VARCHAR(45) NULL,
 TE_BAIRRO VARCHAR(50) NULL,
 TE_CEP DECIMAL(8) NULL,
 TE_COMP VARCHAR(50) NULL,
 TMUN_ID INT NOT NULL,
 PRIMARY KEY (TE_ID),
 CONSTRAINT FK_T_ENDERECO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESCOLARIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESCOLARIDADE (
 ESC_ID SERIAL,
 ESC_NIVEL VARCHAR(25) NULL,
 PRIMARY KEY (ESC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR (
 TP_ID SERIAL,
 TP_NOME VARCHAR(60) NOT NULL,
 TP_SEXO VARCHAR(1) NOT NULL,
 TP_MATRICULA VARCHAR(45) NULL,
 TP_APELIDO VARCHAR(45) NULL,
 TP_FILIACAOPAI VARCHAR(60) NULL,
 TP_FILIACAOMAE VARCHAR(60) NULL,
 TP_CTPS VARCHAR(45) NULL,
 TP_PIS VARCHAR(45) NULL,
 TP_INSS VARCHAR(45) NULL,
 TP_NIT_CEI VARCHAR(45) NULL,
 TP_RG VARCHAR(45) NULL,
 TP_CMA VARCHAR(45) NULL,
 TP_RGB_MAA_IBAMA VARCHAR(45) NULL,
 TP_CIR_CAP_PORTO VARCHAR(45) NULL,
 TP_CPF VARCHAR(14) NULL,
 TP_DATANASC DATE NULL,
 TMUN_ID_NATURAL INT NULL,
 TE_ID INT NULL,
 TP_ESPECIFICIDADE VARCHAR(200) NULL,
 ESC_ID INT NULL,
 PRIMARY KEY (TP_ID),
 CONSTRAINT FK_T_PESCADOR_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID_NATURAL) REFERENCES T_MUNICIPIO (TMUN_ID),
 CONSTRAINT FK_T_PESCADOR_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID), 
 CONSTRAINT FK_PESCADOR_ESC_ID FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE(ESC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_ESCOLARIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESCOLARIDADE (
 ESC_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 PRIMARY KEY (ESC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_PESCADOR1
 FOREIGN KEY (TP_ID)
 REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_ESCOLARIDADE1 FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE (ESC_ID)
 );

-- -----------------------------------------------------
-- TABLE T_RENDA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_RENDA (
 REN_ID SERIAL,
 REN_RENDA VARCHAR(25) NULL,
 REN_FATOR NUMERIC(4,2) NULL,
 REN_FATORMIN NUMERIC(4,2) NULL,
 REN_FATORMAX NUMERIC(4,2) NULL,
 PRIMARY KEY (REN_ID)
);

-- -----------------------------------------------------
-- TABLE T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PROGRAMASOCIAL (
 PRS_ID SERIAL NOT NULL,
 PRS_PROGRAMA VARCHAR(30) NULL,
 PRIMARY KEY (PRS_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_PROGRAMASOCIAL (
 TP_ID INT NOT NULL,
 PRS_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, PRS_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PESCADOR1
 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PROGRAMASOCIAL1 
FOREIGN KEY (PRS_ID) REFERENCES T_PROGRAMASOCIAL (PRS_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_ENDERECO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ENDERECO (
 TP_ID INT NOT NULL,
 TE_ID INT NOT NULL,
 PRIMARY KEY (TE_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
);

-- -----------------------------------------------------
-- TABLE T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COMUNIDADE (
 TCOM_ID SERIAL,
 TCOM_NOME VARCHAR(50) NOT NULL,
 PRIMARY KEY (TCOM_ID),
 UNIQUE (TCOM_NOME)
);

-- -----------------------------------------------------
-- TABLE T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COLONIA (
 TC_ID SERIAL,
 TC_NOME VARCHAR(50) NOT NULL,
 TC_ESPECIFICIDADE CHARACTER VARYING(50),
 TCOM_ID INTEGER NULL,
 TE_ID INTEGER NULL,
 PRIMARY KEY (TC_ID),
 UNIQUE (TC_NOME)
);

-- -----------------------------------------------------
-- TABLE T_ARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ARTEPESCA (
 TAP_ID SERIAL,
 TAP_ARTEPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAP_ID),
 UNIQUE (TAP_ARTEPESCA)
);

-- -----------------------------------------------------
-- TABLE T_TIPOEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOEMBARCACAO (
 TTE_ID SERIAL,
 TTE_TIPOEMBARCACAO VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTE_ID),
 UNIQUE (TTE_TIPOEMBARCACAO)
);

-- -----------------------------------------------------
-- TABLE T_TIPODEPENDENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPODEPENDENTE (
 TTD_ID SERIAL,
 TTD_TIPODEPENDENTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TTD_ID)
);

-- -----------------------------------------------------
-- TABLE T_AREAPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_AREAPESCA (
 TAREAP_ID SERIAL,
 TAREAP_AREAPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAREAP_ID),
 UNIQUE (TAREAP_AREAPESCA)
);

-- -----------------------------------------------------
-- TABLE T_SITUACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_SITUACAO (
 TS_ID SERIAL,
 TS_SITUACAO BOOLEAN DEFAULT TRUE NULL,
 TS_MOTIVO VARCHAR(100) NULL,
 PRIMARY KEY (TS_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOTEL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOTEL (
 TTEL_ID SERIAL,
 TTEL_DESC VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TELEFONECONTATO (
 TTCONT_ID SERIAL,
 TTCONT_DDD DECIMAL(2) NOT NULL,
 TTCONT_TELEFONE DECIMAL(10) NOT NULL,
 TTEL_ID INT NOT NULL,
 PRIMARY KEY (TTCONT_ID),
 CONSTRAINT FK_T_TELEFONECONTATO_T_TIPOTEL1 FOREIGN KEY (TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_LOGIN
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LOGIN (
 TL_ID SERIAL,
 TL_LOGIN VARCHAR(12) NOT NULL,
 TL_HASHSENHA CHAR(40) NOT NULL,
 TL_ULTIMOACESSO TIMESTAMP NULL,
 PRIMARY KEY (TL_ID),
 UNIQUE (TL_LOGIN)
);

-- -----------------------------------------------------
-- TABLE T_PERFIL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PERFIL (
 TP_ID SERIAL,
 TP_PERFIL VARCHAR(40) NOT NULL,
 PRIMARY KEY (TP_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO (
 TU_ID SERIAL,
 TU_NOME VARCHAR(45) NOT NULL,
 TU_SEXO VARCHAR(1) NOT NULL,
 TU_CPF VARCHAR(14) NOT NULL,
 TU_RG VARCHAR(11) NOT NULL,
 TU_EMAIL VARCHAR(30) NOT NULL,
 TU_TELRES NUMERIC (14,0),
 TU_TELCEL NUMERIC (14,0),
 TU_USUARIODELETADO BOOLEAN DEFAULT FALSE NOT NULL,
 TL_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TE_ID INT NOT NULL,
 PRIMARY KEY (TU_ID),
 CONSTRAINT FK_T_USUARIO_T_LOGIN1 FOREIGN KEY (TL_ID) REFERENCES T_LOGIN (TL_ID),
 CONSTRAINT FK_T_USUARIO_T_PERFIL1 FOREIGN KEY (TP_ID) REFERENCES T_PERFIL (TP_ID),
 CONSTRAINT FK_T_USUARIO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
 );

-- -----------------------------------------------------
-- TABLE T_HISTORICORECADASTRAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_HISTORICORECADASTRAMENTO (
 THR_DATA DATE NOT NULL,
 TP_ID INT NULL,
 TS_ID INT NULL,
 THR_DESCRICAO VARCHAR(45) NULL,
 TU_ID_RESP_COLETA INT NULL,
 TU_ID_RESP_DIGITA INT NULL,
 PRIMARY KEY (THR_DATA, TP_ID, TS_ID),
 CONSTRAINT FK_T_DATARECADASTRAMENTO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_SITUACAOATUAL1 FOREIGN KEY (TS_ID) REFERENCES T_SITUACAO (TS_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO1 FOREIGN KEY (TU_ID_RESP_COLETA) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO2 FOREIGN KEY (TU_ID_RESP_DIGITA) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOCAPTURADA (
 ITC_ID SERIAL,
 ITC_TIPO VARCHAR(30) NULL,
 PRIMARY KEY (ITC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_TIPOARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TIPOARTEPESCA (
 TP_ID INT NOT NULL,
 TAP_ID INT NOT NULL,
 ITC_ID INT NULL,
 PRIMARY KEY (TP_ID, TAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_TIPOARTEPESCA1 FOREIGN KEY (TAP_ID) REFERENCES T_ARTEPESCA (TAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOCAPTURADA FOREIGN KEY (ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_ESPECIECAPTURADAS
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESPECIECAPTURADAS (
 TP_ID INT NOT NULL,
 T_TIPOCAPTURADA_ITC_ID INT NOT NULL,
 PRIMARY KEY (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_TIPOCAPTURADA1 FOREIGN KEY (T_TIPOCAPTURADA_ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PORTEEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTEEMBARCACAO (
 TPE_ID SERIAL,
 TPE_PORTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TPE_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_EMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_EMBARCACAO (
 TTE_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TPTE_MOTOR BOOLEAN NOT NULL,
 TPE_ID INT NOT NULL,
 PRIMARY KEY (TTE_ID, TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_EMBARCACAO1 FOREIGN KEY (TTE_ID) REFERENCES T_TIPOEMBARCACAO (TTE_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PORTEEMBARCACAO1 FOREIGN KEY (TPE_ID) REFERENCES T_PORTEEMBARCACAO (TPE_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COLONIA (
 TP_ID INT NOT NULL,
 TC_ID INT NOT NULL,
 TPTC_DATAINSCCOLONIA DATE NULL,
 PRIMARY KEY (TP_ID, TC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_COLONIA1 FOREIGN KEY (TC_ID) REFERENCES T_COLONIA (TC_ID)
);

-- -----------------------------------------------------
-- TABLE T_ALTERACAOSENHA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ALTERACAOSENHA (
 TAS_TOKEN CHAR(40) NOT NULL,
 TAS_DATASOLICITACAO TIMESTAMP NOT NULL,
 TAS_DATAALTERACAO TIMESTAMP NULL,
 TU_ID INT NOT NULL,
 PRIMARY KEY (TAS_TOKEN),
 CONSTRAINT FK_T_ALTERACAOSENHA_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO_HAS_T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO_HAS_T_TELEFONECONTATO (
 TU_ID INT NOT NULL,
 TTCONT_ID INT NOT NULL,
 PRIMARY KEY (TU_ID, TTCONT_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TELEFONECONTATO (
 TP_ID INT NOT NULL,
 TTCONT_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TTCONT_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
);

-- -----------------------------------------------------
-- TABLE T_GRUPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GRUPO (
 GRP_ID SERIAL,
 GRP_NOME VARCHAR(45) NULL,
 PRIMARY KEY (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_ORDEM
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ORDEM (
 ORD_ID SERIAL,
 ORD_NOME VARCHAR(30) NULL,
 ORD_CARACTERISTICA VARCHAR(45) NULL,
 GRP_ID INT NOT NULL,
 PRIMARY KEY (ORD_ID),
 CONSTRAINT FK_DSBQ_ORDEM_DSBQ_GRUPO FOREIGN KEY (GRP_ID) REFERENCES T_GRUPO (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_FAMILIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FAMILIA (
 FAM_ID SERIAL,
 FAM_NOME VARCHAR(45) NULL,
 FAM_ORDEM_FILOGENETICA INT NULL,
 FAM_TIPO VARCHAR(45) NULL,
 FAM_CARACTERISTICA VARCHAR(255) NULL,
 ORD_ID INT NOT NULL,
 PRIMARY KEY (FAM_ID),
 CONSTRAINT FK_DSBQ_FAMILIA_DSBQ_ORDEM1 FOREIGN KEY (ORD_ID) REFERENCES T_ORDEM (ORD_ID)
);

-- -----------------------------------------------------
-- TABLE T_GENERO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GENERO (
 GEN_ID SERIAL,
 GEN_NOME VARCHAR(45) NULL,
 FAM_ID INT NOT NULL,
 PRIMARY KEY (GEN_ID),
 CONSTRAINT FK_DSBQ_GENERO_DSBQ_FAMILIA1 FOREIGN KEY (FAM_ID) REFERENCES T_FAMILIA (FAM_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESPECIE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESPECIE (
 ESP_ID SERIAL,
 ESP_NOME VARCHAR(45) NULL,
 ESP_DESCRITOR VARCHAR(45) NULL,
 ESP_NOME_COMUM VARCHAR(45) NULL,
 GEN_ID INT NOT NULL,
 PRIMARY KEY (ESP_ID),
 CONSTRAINT FK_DSBQ_ESPÉCIE_DSBQ_GENERO1 FOREIGN KEY (GEN_ID) REFERENCES T_GENERO (GEN_ID)
);

-- -----------------------------------------------------
-- TABLE T_SUBAMOSTRA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_SUBAMOSTRA (
 SA_ID SERIAL,
 SA_SUBAMOSTRA VARCHAR(100) NULL,
 PRIMARY KEY (SA_ID)
);

-- -----------------------------------------------------
-- TABLE T_PORTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTO (
 PTO_ID SERIAL,
 PTO_NOME VARCHAR(45) NULL,
 PTO_LOCAL VARCHAR(45) NULL,
 TMUN_ID INT NOT NULL,
 PRIMARY KEY (PTO_ID),
 CONSTRAINT FK_DSBQ_PORTO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);

-- -----------------------------------------------------
-- TABLE T_TEMPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TEMPO (
 TMP_ID SERIAL,
 TMP_ESTADO VARCHAR(45) NULL,
 PRIMARY KEY (TMP_ID)
);

-- -----------------------------------------------------
-- TABLE T_VENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VENTO (
 VNT_ID SERIAL,
 VNT_FORCA VARCHAR(20) NULL,
 PRIMARY KEY (VNT_ID)
);

-- -----------------------------------------------------
-- TABLE T_FICHA_DIARIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FICHA_DIARIA (
 FD_ID SERIAL,
 T_ESTAGIARIO_TU_ID INT NOT NULL,
 T_MONITOR_TU_ID1 INT NOT NULL,
 FD_DATA DATE NOT NULL,
 FD_TURNO VARCHAR NOT NULL,
 OBS VARCHAR(100) NULL,
 PTO_ID INT NOT NULL,
 TMP_ID INT NOT NULL,
 VNT_ID INT NOT NULL,
 PRIMARY KEY (FD_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_PORTO1 FOREIGN KEY (PTO_ID) REFERENCES T_PORTO (PTO_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO1 FOREIGN KEY (T_ESTAGIARIO_TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO2 FOREIGN KEY (T_MONITOR_TU_ID1) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_TEMPO1 FOREIGN KEY (TMP_ID) REFERENCES T_TEMPO (TMP_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_VENTO1 FOREIGN KEY (VNT_ID)REFERENCES T_VENTO (VNT_ID)
);

-- -----------------------------------------------------
-- TABLE T_MONITORAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MONITORAMENTO (
 MNT_ID SERIAL,
 MNT_ARTE INT NULL,
 MNT_QUANTIDADE INT NULL,
 MNT_MONITORADO BOOLEAN NULL,
 FD_ID INT NOT NULL,
 PRIMARY KEY (MNT_ID),
 CONSTRAINT FK_DSBQ_MONITORAMENTO_DSBQ_FICHA_DIARIA1 FOREIGN KEY (FD_ID) REFERENCES T_FICHA_DIARIA (FD_ID)
);



-- -----------------------------------------------------
-- TABLE T_PESQUEIRO_AF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESQUEIRO_AF (
 PAF_ID SERIAL,
 PAF_PESQUEIRO VARCHAR(45) NULL,
 PRIMARY KEY (PAF_ID)
);


-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_TT_DEPENDENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_TT_DEPENDENTE (
 TPTD_ID SERIAL,
 TP_ID INT NOT NULL,
 T_TIPODEPENDENTE_TTD_ID INT NOT NULL,
 TP_TD_QUANTIDADE INTEGER,
 PRIMARY KEY (TPTD_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_TIPODEPENDENTE1 FOREIGN KEY (T_TIPODEPENDENTE_TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COMUNIDADE (
 TP_ID INT NOT NULL,
 TCOM_ID INT NOT NULL,
 PRIMARY KEY (TCOM_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_COMUNIDADE1 FOREIGN KEY (TCOM_ID) REFERENCES T_COMUNIDADE (TCOM_ID)
);

-- -----------------------------------------------------
-- VIEW USUARIO
-- -----------------------------------------------------
CREATE VIEW V_USUARIO AS
 SELECT T_USUARIO.TU_ID,
 T_USUARIO.TU_NOME, T_USUARIO.TU_SEXO,
 T_USUARIO.TU_CPF, T_USUARIO.TU_RG,
 T_USUARIO.TU_EMAIL, T_USUARIO.TU_USUARIODELETADO,
 T_USUARIO.TU_TELRES, T_USUARIO.TU_TELCEL,
 T_USUARIO.TL_ID,
 T_USUARIO.TP_ID, T_PERFIL.TP_PERFIL,
 T_USUARIO.TE_ID,
 T_LOGIN.TL_LOGIN,
 T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_USUARIO, T_LOGIN, T_ENDERECO, T_MUNICIPIO, T_PERFIL
 WHERE T_USUARIO.TL_ID = T_LOGIN.TL_ID AND
 T_USUARIO.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID AND
 T_USUARIO.TP_ID = T_PERFIL.TP_ID;

-- -----------------------------------------------------
-- VIEW COLONIA
-- -----------------------------------------------------
CREATE VIEW V_COLONIA AS
 SELECT T_COLONIA.TC_ID, T_COLONIA.TC_NOME, T_COLONIA.TC_ESPECIFICIDADE, T_COLONIA.TCOM_ID,
 T_COLONIA.TE_ID, T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_COLONIA, T_ENDERECO, T_MUNICIPIO
 WHERE T_COLONIA.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR AS
SELECT
TP.TP_ID, TP.TP_NOME,
TP.TP_SEXO, TP.TP_MATRICULA,
TP.TP_APELIDO, TP.TP_FILIACAOPAI,
TP.TP_FILIACAOMAE, TP.TP_CTPS,
TP.TP_PIS, TP.TP_INSS,
TP.TP_NIT_CEI, TP.TP_RG,
TP.TP_CMA, TP.TP_RGB_MAA_IBAMA,
TP.TP_CIR_CAP_PORTO, TP.TP_CPF,
TP.TP_DATANASC,
TP.TP_ESPECIFICIDADE, TP.ESC_ID,
TP.TMUN_ID_NATURAL, TM.TMUN_MUNICIPIO "MUNNAT", TM.TUF_SIGLA "SIGNAT",
TP.TE_ID, TE.TE_LOGRADOURO, TE.TE_NUMERO,
TE.TE_COMP, TE.TE_BAIRRO, TE.TE_CEP,
TE.TMUN_ID, TM.TMUN_MUNICIPIO, TM.TUF_SIGLA
FROM
T_PESCADOR AS TP, T_ENDERECO AS TE, T_MUNICIPIO AS TM
WHERE
TP.TMUN_ID_NATURAL = TM.TMUN_ID AND
TP.TE_ID = TE.TE_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE TABLE T_PESCADOR_HAS_TELEFONE
(
 TPT_TP_ID INTEGER NOT NULL,
 TPT_TTEL_ID INTEGER NOT NULL,
 TPT_TELEFONE VARCHAR(20) NOT NULL,
 CONSTRAINT T_PESCADORCONTATO_PKEY PRIMARY KEY (TPT_TP_ID, TPT_TTEL_ID),
 CONSTRAINT FK_TPT_TP FOREIGN KEY (TPT_TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_TPT_TTEL FOREIGN KEY (TPT_TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASTELEFONE AS
SELECT PT.TPT_TP_ID, PT.TPT_TTEL_ID, PT.TPT_TELEFONE, TT.TTEL_DESC
FROM T_PESCADOR_HAS_TELEFONE AS PT, T_TIPOTEL AS TT
WHERE PT.TPT_TTEL_ID = TT.TTEL_ID;

CREATE TABLE T_PESCADOR_HAS_T_TIPODEPENDENTE
(
 TP_ID INTEGER NOT NULL,
 TTD_ID INTEGER NOT NULL,
 TPTD_QUANTIDADE INTEGER,
 CONSTRAINT T_PESCADOR_HAS_T_TIPODEPENDENTE_PKEY PRIMARY KEY (TP_ID, TTD_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TTD_ID FOREIGN KEY (TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
);

INSERT INTO T_PESCADOR_HAS_T_TIPODEPENDENTE (TP_ID, TTD_ID, TPTD_QUANTIDADE)
SELECT TP_ID, T_TIPODEPENDENTE_TTD_ID, TP_TD_QUANTIDADE FROM T_PESCADOR_HAS_TT_DEPENDENTE ;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASDEPENDENTE AS
SELECT
PD.TP_ID, PD.TTD_ID, PD.TPTD_QUANTIDADE,
TD.TTD_TIPODEPENDENTE
FROM
T_PESCADOR_HAS_T_TIPODEPENDENTE AS PD,
T_TIPODEPENDENTE AS TD
WHERE
PD.TTD_ID = TD.TTD_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE TABLE T_TIPORENDA (
TTR_ID SERIAL,
TTR_DESCRICAO VARCHAR(45) NOT NULL,
CONSTRAINT T_TIPORENDA_TTR_ID_PKEY PRIMARY KEY (TTR_ID)
);

INSERT INTO T_TIPORENDA VALUES (1, 'PESCA');
INSERT INTO T_TIPORENDA VALUES (2, 'OUTRA RENDA');


-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
--DROP TABLE T_PESCADOR_HAS_T_RENDA;
CREATE TABLE T_PESCADOR_HAS_T_RENDA
(
 TP_ID INTEGER NOT NULL,
 REN_ID INTEGER NOT NULL,
 TTR_ID INTEGER NOT NULL,
 CONSTRAINT T_PESCADOR_HAS_T_RENDA_PKEY PRIMARY KEY (TP_ID, REN_ID, TTR_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA FOREIGN KEY (REN_ID) REFERENCES T_RENDA (REN_ID),
CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TTR_ID FOREIGN KEY (TTR_ID) REFERENCES T_TIPORENDA (TTR_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASRENDA AS
SELECT
PHR.TP_ID,
PHR.REN_ID, TR.REN_RENDA,
PHR.TTR_ID, TTR.TTR_DESCRICAO
FROM
T_PESCADOR_HAS_T_RENDA AS PHR,
T_RENDA AS TR,
T_TIPORENDA AS TTR
WHERE
PHR.REN_ID = TR.REN_ID AND
PHR.TTR_ID = TTR.TTR_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASCOLONIA AS
SELECT
PHC.TP_ID,
PHC.TC_ID, TC.TC_NOME,
PHC.TPTC_DATAINSCCOLONIA
FROM
T_PESCADOR_HAS_T_COLONIA AS PHC,
T_COLONIA AS TC
WHERE
PHC.TC_ID = TC.TC_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASEMBARCACAO AS
SELECT
PHE.TP_ID,
PHE.TTE_ID, TTE.TTE_TIPOEMBARCACAO,
PHE.TPTE_MOTOR,
PHE.TPE_ID, TPE.TPE_PORTE
FROM
T_PESCADOR_HAS_T_EMBARCACAO AS PHE,
T_TIPOEMBARCACAO AS TTE,
T_PORTEEMBARCACAO AS TPE
WHERE
PHE.TTE_ID = TTE.TTE_ID AND
PHE.TPE_ID = TPE.TPE_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASARTETIPOAREA AS
SELECT
PATA.TP_ID,
PATA.TAP_ID, ARTE.TAP_ARTEPESCA,
PATA.ITC_ID, TIPO.ITC_TIPO
FROM
T_PESCADOR_HAS_T_TIPOARTEPESCA AS PATA,
T_TIPOCAPTURADA AS TIPO,
T_ARTEPESCA AS ARTE
WHERE
PATA.TAP_ID = ARTE.TAP_ID AND
PATA.ITC_ID = TIPO.ITC_ID;

-- -----------------------------------------------------
-- TABLE T_AREAPESCA_HAS_T_PESCADOR
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_AREAPESCA (
TP_ID INT NOT NULL,
TAREAP_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TAREAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TAREAP_ID FOREIGN KEY (TAREAP_ID) REFERENCES T_AREAPESCA (TAREAP_ID)
);

--INSERT INTO T_PESCADOR_HAS_T_AREAPESCA (TP_ID, TAREAP_ID)
--SELECT TP_ID, TAREAP_ID FROM T_AREAPESCA_HAS_T_PESCADOR;

---DROP TABLE T_AREAPESCA_HAS_T_PESCADOR;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_AREAPESCA AS
SELECT PA.TP_ID, PA.TAREAP_ID, AREA.TAREAP_AREAPESCA
FROM T_PESCADOR_HAS_T_AREAPESCA AS PA, T_AREAPESCA AS AREA
WHERE PA.TAREAP_ID = AREA.TAREAP_ID;


-- -----------------------------------------------------
-- VIEW MONITORAMENTO BY FICHA DIARIA
-- -----------------------------------------------------
-- 
CREATE OR REPLACE VIEW v_monitoramentobyficha AS 
 SELECT t_monitoramento.mnt_id, t_monitoramento.mnt_arte, 
    t_monitoramento.mnt_quantidade, t_monitoramento.mnt_monitorado, 
    t_ficha_diaria.fd_id, t_artepesca.tap_artepesca
   FROM t_monitoramento, t_ficha_diaria, t_artepesca
  WHERE t_monitoramento.fd_id = t_ficha_diaria.fd_id AND t_monitoramento.mnt_arte = t_artepesca.tap_id;

-- 
-- --- Tem que ser no final do arquivo
-- select relname from pg_class where relkind='S' order by relname;
--
SELECT pg_catalog.setval(' t_areapesca_tareap_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_artepesca_tap_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_colonia_tc_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_comunidade_tcom_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_endereco_te_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_escolaridade_esc_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_especie_esp_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_familia_fam_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_ficha_diaria_fd_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_genero_gen_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_grupo_grp_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_login_tl_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_monitoramento_mnt_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_municipio_tmun_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_ordem_ord_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_perfil_tp_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_pescador_has_tt_dependente_tptd_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_pescador_tp_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_pesqueiro_af_paf_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_porteembarcacao_tpe_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_porto_pto_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_programasocial_prs_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_renda_ren_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_situacao_ts_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_subamostra_sa_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_telefonecontato_ttcont_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tempo_tmp_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tipocapturada_itc_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tipodependente_ttd_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tipoembarcacao_tte_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tiporenda_ttr_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_tipotel_ttel_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_usuario_tu_id_seq', 11000, true);
SELECT pg_catalog.setval(' t_vento_vnt_id_seq', 11000, true);

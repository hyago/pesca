--SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
--SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
--SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';


-- ALTERADO: T_ESPECIE_CAPTURADA SPC_PESO(KG) -> SPC_PESO_KG

-- select tablename, 'T' from pg_tables;
DROP TABLE T_ALTERACAOSENHA CASCADE;
DROP TABLE T_AREAPESCA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_AREAPESCA CASCADE;
DROP TABLE T_ARTEPESCA CASCADE;
DROP TABLE T_COLONIA CASCADE;
DROP TABLE T_COMUNIDADE CASCADE;
DROP TABLE T_DADOS_CALAO CASCADE;
DROP TABLE T_DADOS_EMALHE CASCADE;
DROP TABLE T_DADOS_TARRAFA CASCADE;
DROP TABLE T_ENDERECO CASCADE;
DROP TABLE T_ENTREVISTA_PESCADOR CASCADE;
DROP TABLE T_ESCOLARIDADE CASCADE;
DROP TABLE T_ESPECIE CASCADE;
DROP TABLE T_FAMILIA CASCADE;
DROP TABLE T_FICHA_DIARIA CASCADE;
DROP TABLE T_GENERO CASCADE;
DROP TABLE T_GRUPO CASCADE;
DROP TABLE T_HISTORICORECADASTRAMENTO CASCADE;
DROP TABLE T_ISCA CASCADE;
DROP TABLE T_LOGIN CASCADE;
DROP TABLE T_MARE CASCADE;
DROP TABLE T_MONITORAMENTO CASCADE;
DROP TABLE T_MUNICIPIO CASCADE;
DROP TABLE T_ORDEM CASCADE;
DROP TABLE T_PERFIL CASCADE;
DROP TABLE T_PESCADOR CASCADE;
DROP TABLE T_PESCADOR_HAS_T_COLONIA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_COMUNIDADE CASCADE;
DROP TABLE T_PESCADOR_HAS_T_EMBARCACAO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_PROGRAMASOCIAL CASCADE;
DROP TABLE T_PESCADOR_HAS_T_RENDA CASCADE;
DROP TABLE T_PESCADOR_HAS_TT_DEPENDENTE CASCADE;
DROP TABLE T_PORTEEMBARCACAO CASCADE;
DROP TABLE T_PORTO CASCADE;
DROP TABLE T_PROGRAMASOCIAL CASCADE;
DROP TABLE T_RENDA CASCADE;
DROP TABLE T_SITUACAO CASCADE;
DROP TABLE T_SUBAMOSTRA CASCADE;
DROP TABLE T_TELEFONECONTATO CASCADE;
DROP TABLE T_TEMPO CASCADE;
DROP TABLE T_TIPOCAPTURADA CASCADE;
DROP TABLE T_TIPODEPENDENTE CASCADE;
DROP TABLE T_TIPOEMBARCACAO CASCADE;
DROP TABLE T_TIPOTEL CASCADE;
DROP TABLE T_UF CASCADE;
DROP TABLE T_USUARIO CASCADE;
DROP TABLE T_USUARIO_HAS_T_TELEFONECONTATO CASCADE;
DROP TABLE T_VENTO CASCADE;
DROP TABLE T_PESCADOR_HAS_T_AREAPESCA CASCADE;
DROP TABLE T_TIPORENDA CASCADE;
DROP TABLE T_PESCADOR_HAS_T_TIPODEPENDENTE CASCADE;
DROP TABLE T_ESP_ARTE_PESCA CASCADE;
DROP TABLE T_ARRASTOFUNDO CASCADE;
DROP TABLE T_PESQUEIRO_AF CASCADE;
DROP TABLE T_REDE CASCADE;
DROP TABLE T_PESCALINHA CASCADE;
DROP TABLE T_MARISCAGEM CASCADE;
DROP TABLE T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE T_PESCADOR_HAS_TELEFONE CASCADE;

DROP TABLE  T_TIPOMARE CASCADE;
DROP TABLE  T_BARCO CASCADE;
DROP TABLE  T_CALAO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_ARRASTOFUNDO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_ARRASTOFUNDO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_TARRAFA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_EMALHE CASCADE;
DROP TABLE  T_CALAO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_EMALHE_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_CALAO CASCADE;
DROP TABLE  T_TARRAFA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_EMALHE_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_TARRAFA CASCADE;
DROP TABLE  T_MERGULHO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_GROSSEIRA CASCADE;
DROP TABLE  T_GROSSEIRA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_LINHA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_LINHA CASCADE;
DROP TABLE  T_LINHA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_MERGULHO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_MERGULHO CASCADE;
DROP TABLE  T_GROSSEIRA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_COLETAMANUAL CASCADE;
DROP TABLE  T_COLETAMANUAL_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_COLETAMANUAL_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_VARAPESCA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_VARAPESCA CASCADE;
DROP TABLE  T_VARAPESCA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_LINHAFUNDO CASCADE;
DROP TABLE  T_LINHAFUNDO_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_LINHAFUNDO_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_JERERE CASCADE;
DROP TABLE  T_JERERE_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_RATOEIRA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_SIRIPOIA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_JERERE_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_MANZUA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_MANZUA CASCADE;
DROP TABLE  T_RATOEIRA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_MANZUA_HAS_T_PESQUEIRO CASCADE;
DROP TABLE  T_SIRIPOIA_HAS_T_ESPECIE_CAPTURADA CASCADE;
DROP TABLE  T_SIRIPOIA CASCADE;
DROP TABLE  T_RATOEIRA CASCADE;
DROP TABLE  T_PESCADOR_HAS_T_ARTEPESCA CASCADE;
DROP TABLE  T_PESCADOR_HAS_T_TIPOCAPTURADA CASCADE;

-- -----------------------------------------------------
-- TABLE T_UF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_UF (
 TUF_SIGLA VARCHAR(2) NOT NULL,
 TUF_NOME VARCHAR(25) NOT NULL,
 PRIMARY KEY (TUF_SIGLA)
 );

-- -----------------------------------------------------
-- TABLE T_MUNICIPIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MUNICIPIO (
 TMUN_ID SERIAL,
 TMUN_MUNICIPIO VARCHAR(50) NOT NULL,
 TUF_SIGLA VARCHAR(2) NOT NULL,
 PRIMARY KEY (TMUN_ID),
 CONSTRAINT FK_T_MUNICIPIO_T_UF FOREIGN KEY (TUF_SIGLA) REFERENCES T_UF (TUF_SIGLA)
);

-- -----------------------------------------------------
-- TABLE T_ENDERECO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ENDERECO (
 TE_ID SERIAL,
 TE_LOGRADOURO VARCHAR(100) NULL,
 TE_NUMERO VARCHAR(45) NULL,
 TE_BAIRRO VARCHAR(50) NULL,
 TE_CEP DECIMAL(8) NULL,
 TE_COMP VARCHAR(50) NULL,
 TMUN_ID INT NULL,
 PRIMARY KEY (TE_ID),
 CONSTRAINT FK_T_ENDERECO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESCOLARIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESCOLARIDADE (
 ESC_ID SERIAL,
 ESC_NIVEL VARCHAR(25) NULL,
 PRIMARY KEY (ESC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR (
 TP_ID SERIAL,
 TP_NOME VARCHAR(60) NOT NULL,
 TP_SEXO VARCHAR(1) NULL,
 TP_MATRICULA VARCHAR(45) NULL,
 TP_APELIDO VARCHAR(45) NULL,
 TP_FILIACAOPAI VARCHAR(60) NULL,
 TP_FILIACAOMAE VARCHAR(60) NULL,
 TP_CTPS VARCHAR(45) NULL,
 TP_PIS VARCHAR(45) NULL,
 TP_INSS VARCHAR(45) NULL,
 TP_NIT_CEI VARCHAR(45) NULL,
 TP_RG VARCHAR(45) NULL,
 TP_CMA VARCHAR(45) NULL,
 TP_RGB_MAA_IBAMA VARCHAR(45) NULL,
 TP_CIR_CAP_PORTO VARCHAR(45) NULL,
 TP_CPF VARCHAR(14) NULL,
 TP_DATANASC DATE NULL,
 TMUN_ID_NATURAL INT NULL,
 TE_ID INT NULL,
 TP_ESPECIFICIDADE VARCHAR(255) NULL,
 ESC_ID INT NULL,
 TP_RESP_LAN int null, 
 TP_RESP_CAD int null,
 TP_DTA_CAD date,
 TP_OBS VARCHAR(255) NULL,
 PRIMARY KEY (TP_ID),
 CONSTRAINT FK_T_PESCADOR_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID_NATURAL) REFERENCES T_MUNICIPIO (TMUN_ID),
 CONSTRAINT FK_T_PESCADOR_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID), 
 CONSTRAINT FK_PESCADOR_ESC_ID FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE(ESC_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ESCOLARIDADE
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESCOLARIDADE (
--  ESC_ID INT NOT NULL,
--  TP_ID INT NOT NULL,
--  PRIMARY KEY (ESC_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_PESCADOR1
--  FOREIGN KEY (TP_ID)
--  REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESCOLARIDADE_T_ESCOLARIDADE1 FOREIGN KEY (ESC_ID) REFERENCES T_ESCOLARIDADE (ESC_ID)
--  );

-- -----------------------------------------------------
-- TABLE T_RENDA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_RENDA (
 REN_ID SERIAL,
 REN_RENDA VARCHAR(40) NULL,
 REN_FATOR NUMERIC(4,2) NULL,
 REN_FATORMIN NUMERIC(4,2) NULL,
 REN_FATORMAX NUMERIC(4,2) NULL,
 PRIMARY KEY (REN_ID)
);

-- -----------------------------------------------------
-- TABLE T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PROGRAMASOCIAL (
 PRS_ID SERIAL NOT NULL,
 PRS_PROGRAMA VARCHAR(30) NULL,
 PRIMARY KEY (PRS_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_PROGRAMASOCIAL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_PROGRAMASOCIAL (
 TP_ID INT NOT NULL,
 PRS_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, PRS_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PESCADOR1
 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PROGRAMASOCIAL_T_PROGRAMASOCIAL1 
FOREIGN KEY (PRS_ID) REFERENCES T_PROGRAMASOCIAL (PRS_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASPROGRAMASOCIAL AS
SELECT
PS.TP_ID, PS.PRS_ID, TBS.PRS_PROGRAMA
FROM
T_PESCADOR_HAS_T_PROGRAMASOCIAL AS PS,
T_PROGRAMASOCIAL AS TBS
WHERE
PS.PRS_ID = TBS.PRS_ID;

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ENDERECO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ENDERECO (
--  TP_ID INT NOT NULL,
--  TE_ID INT NOT NULL,
--  PRIMARY KEY (TE_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ENDERECO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COMUNIDADE (
 TCOM_ID SERIAL,
 TCOM_NOME VARCHAR(50) NOT NULL,
 PRIMARY KEY (TCOM_ID),
 UNIQUE (TCOM_NOME)
);

-- -----------------------------------------------------
-- TABLE T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_COLONIA (
 TC_ID SERIAL,
 TC_NOME VARCHAR(50) NOT NULL,
 TC_ESPECIFICIDADE CHARACTER VARYING(50),
 TCOM_ID INTEGER NULL,
 TE_ID INTEGER NULL,
 PRIMARY KEY (TC_ID),
 UNIQUE (TC_NOME)
);

-- -----------------------------------------------------
-- TABLE T_ARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ARTEPESCA (
 TAP_ID SERIAL,
 TAP_ARTEPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAP_ID),
 UNIQUE (TAP_ARTEPESCA)
);

-- -----------------------------------------------------
-- TABLE T_TIPOEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOEMBARCACAO (
 TTE_ID SERIAL,
 TTE_TIPOEMBARCACAO VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTE_ID),
 UNIQUE (TTE_TIPOEMBARCACAO)
);

-- -----------------------------------------------------
-- TABLE T_TIPODEPENDENTE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPODEPENDENTE (
 TTD_ID SERIAL,
 TTD_TIPODEPENDENTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TTD_ID)
);

-- -----------------------------------------------------
-- TABLE T_AREAPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_AREAPESCA (
 TAREAP_ID SERIAL,
 TAREAP_AREAPESCA VARCHAR(50) NOT NULL,
 PRIMARY KEY (TAREAP_ID),
 UNIQUE (TAREAP_AREAPESCA)
);

-- -----------------------------------------------------
-- TABLE T_SITUACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_SITUACAO (
 TS_ID SERIAL,
 TS_SITUACAO BOOLEAN DEFAULT TRUE NULL,
 TS_MOTIVO VARCHAR(100) NULL,
 PRIMARY KEY (TS_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOTEL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOTEL (
 TTEL_ID SERIAL,
 TTEL_DESC VARCHAR(50) NOT NULL,
 PRIMARY KEY (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TELEFONECONTATO (
 TTCONT_ID SERIAL,
 TTCONT_DDD DECIMAL(2) NOT NULL,
 TTCONT_TELEFONE DECIMAL(10) NOT NULL,
 TTEL_ID INT NOT NULL,
 PRIMARY KEY (TTCONT_ID),
 CONSTRAINT FK_T_TELEFONECONTATO_T_TIPOTEL1 FOREIGN KEY (TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- TABLE T_LOGIN
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LOGIN (
 TL_ID SERIAL,
 TL_LOGIN VARCHAR(12) NOT NULL,
 TL_HASHSENHA CHAR(40) NOT NULL,
 TL_ULTIMOACESSO TIMESTAMP NULL,
 PRIMARY KEY (TL_ID),
 UNIQUE (TL_LOGIN)
);

-- -----------------------------------------------------
-- TABLE T_PERFIL
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PERFIL (
 TP_ID SERIAL,
 TP_PERFIL VARCHAR(40) NOT NULL,
 PRIMARY KEY (TP_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO (
 TU_ID SERIAL,
 TU_NOME VARCHAR(45) NOT NULL,
 TU_SEXO VARCHAR(1) NOT NULL,
 TU_CPF VARCHAR(14) NOT NULL,
 TU_RG VARCHAR(11) NOT NULL,
 TU_EMAIL VARCHAR(30) NOT NULL,
 TU_TELRES VARCHAR (20),
 TU_TELCEL VARCHAR (20),
 TU_USUARIODELETADO BOOLEAN DEFAULT FALSE NOT NULL,
 TL_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TE_ID INT NOT NULL,
 PRIMARY KEY (TU_ID),
 CONSTRAINT FK_T_USUARIO_T_LOGIN1 FOREIGN KEY (TL_ID) REFERENCES T_LOGIN (TL_ID),
 CONSTRAINT FK_T_USUARIO_T_PERFIL1 FOREIGN KEY (TP_ID) REFERENCES T_PERFIL (TP_ID),
 CONSTRAINT FK_T_USUARIO_T_ENDERECO1 FOREIGN KEY (TE_ID) REFERENCES T_ENDERECO (TE_ID)
 );

-- -----------------------------------------------------
-- TABLE T_HISTORICORECADASTRAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_HISTORICORECADASTRAMENTO (
 THR_DATA DATE NOT NULL,
 TP_ID INT NULL,
 TS_ID INT NULL,
 THR_DESCRICAO VARCHAR(45) NULL,
 TU_ID_RESP_COLETA INT NULL,
 TU_ID_RESP_DIGITA INT NULL,
 PRIMARY KEY (THR_DATA, TP_ID, TS_ID),
 CONSTRAINT FK_T_DATARECADASTRAMENTO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_SITUACAOATUAL1 FOREIGN KEY (TS_ID) REFERENCES T_SITUACAO (TS_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO1 FOREIGN KEY (TU_ID_RESP_COLETA) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_HISTOORECADASTRAMENTO_T_USUARIO2 FOREIGN KEY (TU_ID_RESP_DIGITA) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TIPOCAPTURADA (
 ITC_ID SERIAL,
 ITC_TIPO VARCHAR(30) NULL,
 PRIMARY KEY (ITC_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TIPOCAPTURADA (
 TP_ID INT NOT NULL,
 ITC_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, ITC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOCAPTURADA FOREIGN KEY (ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_TIPOARTEPESCA
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TIPOARTEPESCA (
--  TP_ID INT NOT NULL,
--  TAP_ID INT NOT NULL,
--  ITC_ID INT NULL,
--  PRIMARY KEY (TP_ID, TAP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_TIPOARTEPESCA1 FOREIGN KEY (TAP_ID) REFERENCES T_ARTEPESCA (TAP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOCAPTURADA FOREIGN KEY (ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
-- );

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_ESPECIECAPTURADAS
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ESPECIECAPTURADAS (
--  TP_ID INT NOT NULL,
--  T_TIPOCAPTURADA_ITC_ID INT NOT NULL,
--  PRIMARY KEY (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_ESPECIECAPTURADAS_T_TIPOCAPTURADA1 FOREIGN KEY (T_TIPOCAPTURADA_ITC_ID) REFERENCES T_TIPOCAPTURADA (ITC_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PORTEEMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTEEMBARCACAO (
 TPE_ID SERIAL,
 TPE_PORTE VARCHAR(30) NOT NULL,
 PRIMARY KEY (TPE_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_EMBARCACAO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_EMBARCACAO (
--  TTE_ID INT NOT NULL,
--  TP_ID INT NOT NULL,
--  TPTE_MOTOR BOOLEAN NOT NULL,
--  TPE_ID INT NOT NULL,
--  PRIMARY KEY (TTE_ID, TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_EMBARCACAO1 FOREIGN KEY (TTE_ID) REFERENCES T_TIPOEMBARCACAO (TTE_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PORTEEMBARCACAO1 FOREIGN KEY (TPE_ID) REFERENCES T_PORTEEMBARCACAO (TPE_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_EMBARCACAO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_EMBARCACAO (
 TTE_ID INT NOT NULL,
 TP_ID INT NOT NULL,
 TPTE_MOTOR BOOLEAN NULL,
 TPE_ID INT NULL,
TPTE_DONO INT NULL,
 PRIMARY KEY (TTE_ID, TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_EMBARCACAO1 FOREIGN KEY (TTE_ID) REFERENCES T_TIPOEMBARCACAO (TTE_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_EMBARCACAO_T_PORTEEMBARCACAO1 FOREIGN KEY (TPE_ID) REFERENCES T_PORTEEMBARCACAO (TPE_ID)
);

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COLONIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COLONIA (
 TP_ID INT NOT NULL,
 TC_ID INT NOT NULL,
 TPTC_DATAINSCCOLONIA DATE NULL,
 PRIMARY KEY (TP_ID, TC_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COLONIA_T_COLONIA1 FOREIGN KEY (TC_ID) REFERENCES T_COLONIA (TC_ID)
);

-- -----------------------------------------------------
-- TABLE T_ALTERACAOSENHA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ALTERACAOSENHA (
 TAS_TOKEN CHAR(40) NOT NULL,
 TAS_DATASOLICITACAO TIMESTAMP NOT NULL,
 TAS_DATAALTERACAO TIMESTAMP NULL,
 TU_ID INT NOT NULL,
 PRIMARY KEY (TAS_TOKEN),
 CONSTRAINT FK_T_ALTERACAOSENHA_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID)
);

-- -----------------------------------------------------
-- TABLE T_USUARIO_HAS_T_TELEFONECONTATO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_USUARIO_HAS_T_TELEFONECONTATO (
 TU_ID INT NOT NULL,
 TTCONT_ID INT NOT NULL,
 PRIMARY KEY (TU_ID, TTCONT_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_USUARIO1 FOREIGN KEY (TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_T_USUARIO_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
);

-- -- -----------------------------------------------------
-- -- TABLE T_PESCADOR_HAS_T_TELEFONECONTATO
-- -- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_TELEFONECONTATO (
--  TP_ID INT NOT NULL,
--  TTCONT_ID INT NOT NULL,
--  PRIMARY KEY (TP_ID, TTCONT_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_T_TELEFONECONTATO_T_TELEFONECONTATO1 FOREIGN KEY (TTCONT_ID) REFERENCES T_TELEFONECONTATO (TTCONT_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_GRUPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GRUPO (
 GRP_ID SERIAL,
 GRP_NOME VARCHAR(45) NULL,
 PRIMARY KEY (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_ORDEM
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ORDEM (
 ORD_ID SERIAL,
 ORD_NOME VARCHAR(30) NULL,
 ORD_CARACTERISTICA VARCHAR(45) NULL,
 GRP_ID INT NOT NULL,
 PRIMARY KEY (ORD_ID),
 CONSTRAINT FK_DSBQ_ORDEM_DSBQ_GRUPO FOREIGN KEY (GRP_ID) REFERENCES T_GRUPO (GRP_ID)
);

-- -----------------------------------------------------
-- TABLE T_FAMILIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FAMILIA (
 FAM_ID SERIAL,
 FAM_NOME VARCHAR(45) NULL,
 FAM_ORDEM_FILOGENETICA INT NULL,
 FAM_TIPO VARCHAR(45) NULL,
 FAM_CARACTERISTICA VARCHAR(255) NULL,
 ORD_ID INT NOT NULL,
 PRIMARY KEY (FAM_ID),
 CONSTRAINT FK_DSBQ_FAMILIA_DSBQ_ORDEM1 FOREIGN KEY (ORD_ID) REFERENCES T_ORDEM (ORD_ID)
);

-- -----------------------------------------------------
-- TABLE T_GENERO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_GENERO (
 GEN_ID SERIAL,
 GEN_NOME VARCHAR(45) NULL,
 FAM_ID INT NOT NULL,
 PRIMARY KEY (GEN_ID),
 CONSTRAINT FK_DSBQ_GENERO_DSBQ_FAMILIA1 FOREIGN KEY (FAM_ID) REFERENCES T_FAMILIA (FAM_ID)
);

-- -----------------------------------------------------
-- TABLE T_ESPECIE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ESPECIE (
 ESP_ID SERIAL,
 ESP_NOME VARCHAR(45) NULL,
 ESP_DESCRITOR VARCHAR(45) NULL,
 ESP_NOME_COMUM VARCHAR(45) NULL,
 GEN_ID INT NOT NULL,
 PRIMARY KEY (ESP_ID),
 CONSTRAINT FK_DSBQ_ESPÉCIE_DSBQ_GENERO1 FOREIGN KEY (GEN_ID) REFERENCES T_GENERO (GEN_ID)
);

-- -----------------------------------------------------
-- TABLE T_SUBAMOSTRA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_SUBAMOSTRA (
 SA_ID SERIAL,
 SA_SUBAMOSTRA VARCHAR(100) NULL,
 PRIMARY KEY (SA_ID)
);

-- -----------------------------------------------------
-- TABLE T_PORTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PORTO (
 PTO_ID SERIAL,
 PTO_NOME VARCHAR(45) NULL,
 PTO_LOCAL VARCHAR(45) NULL,
 TMUN_ID INT NOT NULL,
 PRIMARY KEY (PTO_ID),
 CONSTRAINT FK_DSBQ_PORTO_T_MUNICIPIO1 FOREIGN KEY (TMUN_ID) REFERENCES T_MUNICIPIO (TMUN_ID)
);


-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_PORTO (
 TP_ID INT NOT NULL,
 PTO_ID INT NOT NULL,
 PRIMARY KEY (TP_ID,  PTO_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PORTO_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_PORTO_PTO_ID FOREIGN KEY (PTO_ID) REFERENCES T_PORTO (PTO_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASPORTO AS
 SELECT PP.TP_ID, PP.PTO_ID, PTO.PTO_NOME, PTO.PTO_LOCAL
 FROM T_PESCADOR_HAS_T_PORTO AS PP, T_PORTO AS PTO
 WHERE PP.PTO_ID=PTO.PTO_ID;

-- -----------------------------------------------------
-- TABLE T_TEMPO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TEMPO (
 TMP_ID SERIAL,
 TMP_ESTADO VARCHAR(45) NULL,
 PRIMARY KEY (TMP_ID)
);

-- -----------------------------------------------------
-- TABLE T_VENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VENTO (
 VNT_ID SERIAL,
 VNT_FORCA VARCHAR(20) NULL,
 PRIMARY KEY (VNT_ID)
);

-- -----------------------------------------------------
-- TABLE T_FICHA_DIARIA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_FICHA_DIARIA (
 FD_ID SERIAL,
 T_ESTAGIARIO_TU_ID INT NOT NULL,
 T_MONITOR_TU_ID1 INT NOT NULL,
 FD_DATA DATE NOT NULL,
 FD_TURNO VARCHAR NOT NULL,
 OBS VARCHAR(255    ) NULL,
 PTO_ID INT NOT NULL,
 TMP_ID INT NOT NULL,
 VNT_ID INT NOT NULL,
 PRIMARY KEY (FD_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_PORTO1 FOREIGN KEY (PTO_ID) REFERENCES T_PORTO (PTO_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO1 FOREIGN KEY (T_ESTAGIARIO_TU_ID) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_T_USUARIO2 FOREIGN KEY (T_MONITOR_TU_ID1) REFERENCES T_USUARIO (TU_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_TEMPO1 FOREIGN KEY (TMP_ID) REFERENCES T_TEMPO (TMP_ID),
 CONSTRAINT FK_DSBQ_FICHA_DIARIA_DSBQ_VENTO1 FOREIGN KEY (VNT_ID)REFERENCES T_VENTO (VNT_ID)
);

-- -----------------------------------------------------
-- TABLE T_MONITORAMENTO
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_MONITORAMENTO (
 MNT_ID SERIAL,
 MNT_ARTE INT NULL,
 MNT_QUANTIDADE INT NULL,
 MNT_MONITORADO BOOLEAN NULL,
 FD_ID INT NOT NULL,
 PRIMARY KEY (MNT_ID),
 CONSTRAINT FK_DSBQ_MONITORAMENTO_DSBQ_FICHA_DIARIA1 FOREIGN KEY (FD_ID) REFERENCES T_FICHA_DIARIA (FD_ID)
);



-- -----------------------------------------------------
-- TABLE T_PESQUEIRO_AF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESQUEIRO_AF (
 PAF_ID SERIAL,
 PAF_PESQUEIRO VARCHAR(45) NULL,
 PRIMARY KEY (PAF_ID)
);


-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_TT_DEPENDENTE
-- -----------------------------------------------------
-- CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_TT_DEPENDENTE (
--  TPTD_ID SERIAL,
--  TP_ID INT NOT NULL,
--  T_TIPODEPENDENTE_TTD_ID INT NOT NULL,
--  TP_TD_QUANTIDADE INTEGER,
--  PRIMARY KEY (TPTD_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
--  CONSTRAINT FK_T_PESCADOR_HAS_TT_DEPENDENTE_T_TIPODEPENDENTE1 FOREIGN KEY (T_TIPODEPENDENTE_TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
-- );

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_COMUNIDADE
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_COMUNIDADE (
 TP_ID INT NOT NULL,
 TCOM_ID INT NOT NULL,
 PRIMARY KEY (TP_ID,  TCOM_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_COMUNIDADE_T_COMUNIDADE1 FOREIGN KEY (TCOM_ID) REFERENCES T_COMUNIDADE (TCOM_ID)
);

-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASCOMUNIDADE AS
 SELECT PC.TP_ID, PC.TCOM_ID, COM.TCOM_NOME
 FROM T_PESCADOR_HAS_T_COMUNIDADE AS PC, T_COMUNIDADE AS COM
 WHERE PC.TCOM_ID=COM.TCOM_ID;


-- -----------------------------------------------------
-- VIEW USUARIO
-- -----------------------------------------------------
CREATE VIEW V_USUARIO AS
 SELECT T_USUARIO.TU_ID,
 T_USUARIO.TU_NOME, T_USUARIO.TU_SEXO,
 T_USUARIO.TU_CPF, T_USUARIO.TU_RG,
 T_USUARIO.TU_EMAIL, T_USUARIO.TU_USUARIODELETADO,
 T_USUARIO.TU_TELRES, T_USUARIO.TU_TELCEL,
 T_USUARIO.TL_ID,
 T_USUARIO.TP_ID, T_PERFIL.TP_PERFIL,
 T_USUARIO.TE_ID,
 T_LOGIN.TL_LOGIN,
 T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_USUARIO, T_LOGIN, T_ENDERECO, T_MUNICIPIO, T_PERFIL
 WHERE T_USUARIO.TL_ID = T_LOGIN.TL_ID AND
 T_USUARIO.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID AND
 T_USUARIO.TP_ID = T_PERFIL.TP_ID;

-- -----------------------------------------------------
-- VIEW COLONIA
-- -----------------------------------------------------
CREATE VIEW V_COLONIA AS
 SELECT T_COLONIA.TC_ID, T_COLONIA.TC_NOME, T_COLONIA.TC_ESPECIFICIDADE, T_COLONIA.TCOM_ID,
 T_COLONIA.TE_ID, T_ENDERECO.TE_LOGRADOURO, T_ENDERECO.TE_NUMERO, T_ENDERECO.TE_COMP, T_ENDERECO.TE_BAIRRO, T_ENDERECO.TE_CEP,
 T_ENDERECO.TMUN_ID, T_MUNICIPIO.TMUN_MUNICIPIO, T_MUNICIPIO.TUF_SIGLA
 FROM T_COLONIA, T_ENDERECO, T_MUNICIPIO
 WHERE T_COLONIA.TE_ID = T_ENDERECO.TE_ID AND
 T_ENDERECO.TMUN_ID = T_MUNICIPIO.TMUN_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR AS
SELECT
TP.TP_ID, TP.TP_NOME,
TP.TP_SEXO, TP.TP_MATRICULA,
TP.TP_APELIDO, TP.TP_FILIACAOPAI,
TP.TP_FILIACAOMAE, TP.TP_CTPS,
TP.TP_PIS, TP.TP_INSS,
TP.TP_NIT_CEI, TP.TP_RG,
TP.TP_CMA, TP.TP_RGB_MAA_IBAMA,
TP.TP_CIR_CAP_PORTO, TP.TP_CPF,
TP.TP_DATANASC,
TP.TP_ESPECIFICIDADE, TP.ESC_ID,
TP.TMUN_ID_NATURAL, TM.TMUN_MUNICIPIO "MUNNAT", TM.TUF_SIGLA "SIGNAT",
TP.TE_ID, TE.TE_LOGRADOURO, TE.TE_NUMERO,
TE.TE_COMP, TE.TE_BAIRRO, TE.TE_CEP,
TE.TMUN_ID, TM.TMUN_MUNICIPIO, TM.TUF_SIGLA
FROM
T_PESCADOR AS TP, T_ENDERECO AS TE, T_MUNICIPIO AS TM
WHERE
TP.TMUN_ID_NATURAL = TM.TMUN_ID AND
TP.TE_ID = TE.TE_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE TABLE T_PESCADOR_HAS_TELEFONE
(
 TPT_TP_ID INTEGER NOT NULL,
 TPT_TTEL_ID INTEGER NOT NULL,
 TPT_TELEFONE VARCHAR(20) NOT NULL,
 CONSTRAINT T_PESCADORCONTATO_PKEY PRIMARY KEY (TPT_TP_ID, TPT_TTEL_ID),
 CONSTRAINT FK_TPT_TP FOREIGN KEY (TPT_TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_TPT_TTEL FOREIGN KEY (TPT_TTEL_ID) REFERENCES T_TIPOTEL (TTEL_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASTELEFONE AS
SELECT PT.TPT_TP_ID, PT.TPT_TTEL_ID, PT.TPT_TELEFONE, TT.TTEL_DESC
FROM T_PESCADOR_HAS_TELEFONE AS PT, T_TIPOTEL AS TT
WHERE PT.TPT_TTEL_ID = TT.TTEL_ID;

CREATE TABLE T_PESCADOR_HAS_T_TIPODEPENDENTE
(
 TP_ID INTEGER NOT NULL,
 TTD_ID INTEGER NOT NULL,
 TPTD_QUANTIDADE INTEGER,
 CONSTRAINT T_PESCADOR_HAS_T_TIPODEPENDENTE_PKEY PRIMARY KEY (TP_ID, TTD_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPODEPENDENTE_TTD_ID FOREIGN KEY (TTD_ID) REFERENCES T_TIPODEPENDENTE (TTD_ID)
);

-- INSERT INTO T_PESCADOR_HAS_T_TIPODEPENDENTE (TP_ID, TTD_ID, TPTD_QUANTIDADE)
-- SELECT TP_ID, T_TIPODEPENDENTE_TTD_ID, TP_TD_QUANTIDADE FROM T_PESCADOR_HAS_TT_DEPENDENTE ;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASDEPENDENTE AS
SELECT
PD.TP_ID, PD.TTD_ID, PD.TPTD_QUANTIDADE,
TD.TTD_TIPODEPENDENTE
FROM
T_PESCADOR_HAS_T_TIPODEPENDENTE AS PD,
T_TIPODEPENDENTE AS TD
WHERE
PD.TTD_ID = TD.TTD_ID;


-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE TABLE T_TIPORENDA (
TTR_ID SERIAL,
TTR_DESCRICAO VARCHAR(45) NOT NULL,
CONSTRAINT T_TIPORENDA_TTR_ID_PKEY PRIMARY KEY (TTR_ID)
);
-- -----------------------------------------------------
-- -----------------------------------------------------
CREATE TABLE T_TIPORENDA (
TTR_ID SERIAL,
TTR_DESCRICAO VARCHAR(45) NOT NULL,
CONSTRAINT T_TIPORENDA_TTR_ID_PKEY PRIMARY KEY (TTR_ID)
);

-- INSERT INTO T_TIPORENDA VALUES (1, 'PESCA');
-- INSERT INTO T_TIPORENDA VALUES (2, 'OUTRA RENDA');


-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
--DROP TABLE T_PESCADOR_HAS_T_RENDA;
CREATE TABLE T_PESCADOR_HAS_T_RENDA
(
 TP_ID INTEGER NOT NULL,
 REN_ID INTEGER NOT NULL,
 TTR_ID INTEGER NOT NULL,
 CONSTRAINT T_PESCADOR_HAS_T_RENDA_PKEY PRIMARY KEY (TP_ID, REN_ID, TTR_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA FOREIGN KEY (REN_ID) REFERENCES T_RENDA (REN_ID),
CONSTRAINT FK_T_PESCADOR_HAS_T_RENDA_TTR_ID FOREIGN KEY (TTR_ID) REFERENCES T_TIPORENDA (TTR_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASRENDA AS
SELECT
PHR.TP_ID,
PHR.REN_ID, TR.REN_RENDA,
PHR.TTR_ID, TTR.TTR_DESCRICAO
FROM
T_PESCADOR_HAS_T_RENDA AS PHR,
T_RENDA AS TR,
T_TIPORENDA AS TTR
WHERE
PHR.REN_ID = TR.REN_ID AND
PHR.TTR_ID = TTR.TTR_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADORHASCOLONIA AS
SELECT
PHC.TP_ID,
PHC.TC_ID, TC.TC_NOME,
PHC.TPTC_DATAINSCCOLONIA
FROM
T_PESCADOR_HAS_T_COLONIA AS PHC,
T_COLONIA AS TC
WHERE
PHC.TC_ID = TC.TC_ID;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
-- CREATE VIEW V_PESCADORHASEMBARCACAO AS
-- SELECT
-- PHE.TP_ID,
-- PHE.TTE_ID, TTE.TTE_TIPOEMBARCACAO,
-- PHE.TPTE_MOTOR,
-- PHE.TPE_ID, TPE.TPE_PORTE
-- FROM
-- T_PESCADOR_HAS_T_EMBARCACAO AS PHE,
-- T_TIPOEMBARCACAO AS TTE,
-- T_PORTEEMBARCACAO AS TPE
-- WHERE
-- PHE.TTE_ID = TTE.TTE_ID AND
-- PHE.TPE_ID = TPE.TPE_ID;


CREATE VIEW V_PESCADORHASEMBARCACAO AS
SELECT
PHE.TP_ID,
PHE.TTE_ID, TTE.TTE_TIPOEMBARCACAO,
PHE.TPTE_MOTOR,
PHE.TPE_ID, TPE.TPE_PORTE,
PHE.TPTE_DONO
FROM
T_PESCADOR_HAS_T_EMBARCACAO AS PHE,
T_TIPOEMBARCACAO AS TTE,
T_PORTEEMBARCACAO AS TPE
WHERE
PHE.TTE_ID = TTE.TTE_ID AND
PHE.TPE_ID = TPE.TPE_ID;

-- -- -----------------------------------------------------
-- -- VIEW Pescador
-- -- -----------------------------------------------------
-- CREATE VIEW V_PESCADORHASARTETIPOAREA AS
-- SELECT
-- PATA.TP_ID,
-- PATA.TAP_ID, ARTE.TAP_ARTEPESCA,
-- PATA.ITC_ID, TIPO.ITC_TIPO
-- FROM
-- T_PESCADOR_HAS_T_TIPOARTEPESCA AS PATA,
-- T_TIPOCAPTURADA AS TIPO,
-- T_ARTEPESCA AS ARTE
-- WHERE
-- PATA.TAP_ID = ARTE.TAP_ID AND
-- PATA.ITC_ID = TIPO.ITC_ID;

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_AREAPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_AREAPESCA (
TP_ID INT NOT NULL,
TAREAP_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TAREAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TP_ID FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_AREAPESCA_TAREAP_ID FOREIGN KEY (TAREAP_ID) REFERENCES T_AREAPESCA (TAREAP_ID)
);

--INSERT INTO T_PESCADOR_HAS_T_AREAPESCA (TP_ID, TAREAP_ID)
--SELECT TP_ID, TAREAP_ID FROM T_AREAPESCA_HAS_T_PESCADOR;

---DROP TABLE T_AREAPESCA_HAS_T_PESCADOR;

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_AREAPESCA AS
SELECT PA.TP_ID, PA.TAREAP_ID, AREA.TAREAP_AREAPESCA
FROM T_PESCADOR_HAS_T_AREAPESCA AS PA, T_AREAPESCA AS AREA
WHERE PA.TAREAP_ID = AREA.TAREAP_ID;

-- -----------------------------------------------------
-- TABLE T_PESCADOR_HAS_T_ARTEPESCA
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_PESCADOR_HAS_T_ARTEPESCA (
 TP_ID INT NOT NULL,
 TAP_ID INT NOT NULL,
 PRIMARY KEY (TP_ID, TAP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_PESCADOR1 FOREIGN KEY (TP_ID) REFERENCES T_PESCADOR (TP_ID),
 CONSTRAINT FK_T_PESCADOR_HAS_T_TIPOARTEPESCA_T_TIPOARTEPESCA1 FOREIGN KEY (TAP_ID) REFERENCES T_ARTEPESCA (TAP_ID)
);

-- -----------------------------------------------------
-- VIEW Pescador
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_ARTEPESCA AS
SELECT PA.TP_ID, PA.TAP_ID, ARTE.TAP_ARTEPESCA
FROM T_PESCADOR_HAS_T_ARTEPESCA AS PA, T_ARTEPESCA AS ARTE
WHERE PA.TAP_ID = ARTE.TAP_ID;

-- -----------------------------------------------------
-- VIEW V_PESCADOR_HAS_T_TIPOCAPTURADA
-- -----------------------------------------------------
CREATE VIEW V_PESCADOR_HAS_T_TIPOCAPTURADA AS
SELECT PA.TP_ID, PA.ITC_ID, TIPO.ITC_TIPO
FROM T_PESCADOR_HAS_T_TIPOCAPTURADA AS PA, T_TIPOCAPTURADA AS TIPO
WHERE PA.ITC_ID = TIPO.ITC_ID;


-- -----------------------------------------------------
-- VIEW MONITORAMENTO BY FICHA DIARIA
-- -----------------------------------------------------
-- 
CREATE OR REPLACE VIEW v_monitoramentobyficha AS 
 SELECT t_monitoramento.mnt_id, t_monitoramento.mnt_arte, 
    t_monitoramento.mnt_quantidade, t_monitoramento.mnt_monitorado, 
    t_ficha_diaria.fd_id, t_artepesca.tap_artepesca
   FROM t_monitoramento, t_ficha_diaria, t_artepesca
  WHERE t_monitoramento.fd_id = t_ficha_diaria.fd_id AND t_monitoramento.mnt_arte = t_artepesca.tap_id;



-- -----------------------------------------------------
-- Table T_Isca
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Isca (
  ISC_ID serial,
  ISC_Tipo VARCHAR(45) NULL,
  PRIMARY KEY (ISC_ID));

-- -----------------------------------------------------
-- Table T_TipoEmbarcacao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TipoEmbarcacao (
  TTE_ID serial,
  TTE_TipoEmbarcacao VARCHAR(50) NOT NULL,
  PRIMARY KEY (TTE_ID));


-- -----------------------------------------------------
-- Table T_Monitoramento
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Monitoramento (
  MNT_ID serial,
  MNT_Arte INT NULL DEFAULT NULL,
  MNT_Quantidade INT NULL DEFAULT NULL,
  MNT_Monitorado boolean NULL DEFAULT NULL,
  MNT_Embarcado boolean NULL DEFAULT NULL,
  FD_ID INT NOT NULL,
  PRIMARY KEY (MNT_ID),
  CONSTRAINT fk_DSBQ_Monitoramento_DSBQ_Ficha_Diaria1
    FOREIGN KEY (FD_ID)
    REFERENCES T_Ficha_Diaria (FD_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Pesqueiro_AF
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Pesqueiro_AF (
  PAF_ID INT NULL DEFAULT NULL,
  PAF_Pesqueiro VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (PAF_ID));



-- -----------------------------------------------------
-- Table T_TipoMare
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_TipoMare (
  TMR_ID serial,
  TMR_Tipo VARCHAR(20) NULL,
  PRIMARY KEY (TMR_ID));



-- -----------------------------------------------------
-- Table T_Mare
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Mare (
  MR_ID serial,
  TMR_ID INT NOT NULL,
  MR_Viva boolean NULL,
  PRIMARY KEY (MR_ID),
  CONSTRAINT fk_T_Mare_T_TipoMare1
    FOREIGN KEY (TMR_ID)
    REFERENCES T_TipoMare (TMR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Barco
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Barco (
  BAR_ID serial,
  BAR_Nome VARCHAR(45) NULL,
  PRIMARY KEY (BAR_ID));



-- -----------------------------------------------------
-- Table T_ArrastoFundo
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ArrastoFundo (
  AF_ID serial,
  AF_Embarcado boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID_Entrevistado INT NOT NULL,
  AF_QuantPescadores INT NULL,
  AF_DHSaida TIMESTAMP NULL,
  AF_DHVolta TIMESTAMP NULL,
  AF_Diesel FLOAT NULL,
  AF_Oleo FLOAT NULL,
  AF_Alimento FLOAT NULL,
  AF_Gelo FLOAT NULL,
  AF_Avistou VARCHAR(100) NULL,
  AF_Subamostra boolean NULL,
  SA_ID INT NULL,
  AF_OBS VARCHAR(100) NULL,
  MNT_ENT_ID INT NOT NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (AF_ID),
  CONSTRAINT fk_T_ArrastoFundo_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ArrastoFundo_T_Subamostra1
    FOREIGN KEY (SA_ID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ArrastoFundo_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ArrastoFundo_T_Pescador1
    FOREIGN KEY (TP_ID_Entrevistado)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ArrastoFundo_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_ArrastoFundo_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ArrastoFundo_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  AF_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_ArrastoFundo1
    FOREIGN KEY (AF_ID)
    REFERENCES T_ArrastoFundo (AF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Emalhe
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Emalhe (
  EM_ID serial,
  EM_Embarcado boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  EM_QuantPescadores INT NULL,
  EM_DHLancamento TIMESTAMP NULL,
  EM_DHRecolhimento TIMESTAMP NULL,
  EM_Diesel FLOAT NULL,
  EM_Oleo FLOAT NULL,
  EM_Alimento FLOAT NULL,
  EM_Gelo FLOAT NULL,
  EM_Avistou VARCHAR(100) NULL,
  EM_Subamostra boolean NULL,
  SA_SubID INT NULL,
  EM_Tamanho FLOAT NULL,
  EM_Altura FLOAT NULL,
  EM_NumPanos INT NULL,
  EM_Malha INT NULL,
  MNT_ENT_ID INT NOT NULL,
  EM_OBS VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (EM_ID),
  CONSTRAINT fk_T_Emalhe_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Emalhe_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Emalhe_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Emalhe_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Emalhe_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Emalhe_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Emalhe_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  EM_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Emalhe1
    FOREIGN KEY (EM_ID)
    REFERENCES T_Emalhe (EM_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_ArrastoFundo_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ArrastoFundo_has_T_Pesqueiro (
  AF_ID INT NOT NULL,
  AF_PAF_ID INT NOT NULL,
  T_TempoPesqueiro TIME NULL,
  PRIMARY KEY (AF_ID, AF_PAF_ID),
  CONSTRAINT fk_T_ArrastoFundo_has_T_Pesqueiro_T_ArrastoFundo1
    FOREIGN KEY (AF_ID)
    REFERENCES T_ArrastoFundo (AF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ArrastoFundo_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (AF_PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Calao
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Calao (
  CAL_ID serial,
  CAL_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID_Entrevistado INT NOT NULL,
  CAL_QuantPescadores INT NULL,
  CAL_Data DATE NULL,
  CAL_TempoGasto TIME NULL,
  CAL_Avistou VARCHAR(100) NULL,
  CAL_Subamostra boolean NULL,
  SA_SubId INT NULL,
  CAL_Tamanho FLOAT NULL,
  CAL_Altura FLOAT NULL,
  CAL_Malha FLOAT NULL,
  CAL_NumLances INT NULL,
  T_Monitoramento_has_TEntrevista_MNT_ENT_ID INT NOT NULL,
  CAL_OBS VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (CAL_ID),
  CONSTRAINT fk_T_Calao_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Calao_T_Subamostra1
    FOREIGN KEY (SA_SubId)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Calao_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Calao_T_Pescador1
    FOREIGN KEY (TP_ID_Entrevistado)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Calao_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_Calao_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Calao_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  CAL_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Calao1
    FOREIGN KEY (CAL_ID)
    REFERENCES T_Calao (CAL_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Tarrafa
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Tarrafa (
  TAR_ID serial,
  TAR_Embarcado boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID_Entrevistado INT NOT NULL,
  TAR_QuantPescadores INT NULL,
  TAR_Data DATE NULL,
  TAR_TempoGasto TIME NULL,
  TAR_Avistou VARCHAR(100) NULL,
  TAR_Subamostra boolean NULL,
  SA_SubID INT NULL,
  TAR_Roda FLOAT NULL,
  TAR_Altura FLOAT NULL,
  TAR_Malha FLOAT NULL,
  TAR_NumLances INT NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (TAR_ID),
  CONSTRAINT fk_T_Tarrafa_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_T_Pescador1
    FOREIGN KEY (TP_ID_Entrevistado)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_T_Monitoramento1
    FOREIGN KEY (MNT_ID)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_Tarrafa_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Tarrafa_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  TAR_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Calao1
    FOREIGN KEY (TAR_ID)
    REFERENCES T_Tarrafa (TAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);




-- -----------------------------------------------------
-- Table T_Emalhe_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Emalhe_has_T_Pesqueiro (
  EM_ID INT NOT NULL,
  AF_PAF_ID INT NOT NULL,
  PRIMARY KEY (EM_ID),
  CONSTRAINT fk_T_Emalhe_has_T_Pesqueiro_T_Emalhe1
    FOREIGN KEY (EM_ID)
    REFERENCES T_Emalhe (EM_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Emalhe_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (AF_PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Calao_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Calao_has_T_Pesqueiro (
  CAL_ID INT NOT NULL,
  AF_PAF_ID INT NOT NULL,
  PRIMARY KEY (CAL_ID),
  CONSTRAINT fk_T_Calao_has_T_Pesqueiro_T_Calao1
    FOREIGN KEY (CAL_ID)
    REFERENCES T_Calao (CAL_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Calao_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (AF_PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Tarrafa_Has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Tarrafa_Has_T_Pesqueiro (
  TAR_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  PRIMARY KEY (TAR_ID),
  CONSTRAINT fk_T_Tarrafa_Has_T_Pesqueiro_T_Tarrafa1
    FOREIGN KEY (TAR_ID)
    REFERENCES T_Tarrafa (TAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_Has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Linha
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Linha (
  LIN_ID serial,
  T_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  LIN_NumPescadores INT NULL,
  LIN_DHSaida TIMESTAMP NULL,
  LIN_DHVolta TIMESTAMP NULL,
  LIN_Diesel FLOAT NULL,
  LIN_Oleo FLOAT NULL,
  LIN_Alimento FLOAT NULL,
  LIN_Gelo FLOAT NULL,
  LIN_Avistou VARCHAR(100) NULL,
  LIN_Subamostra boolean NULL,
  SA_SubID INT NULL,
  LIN_NumLinhas INT NULL,
  LIN_NumAnzoisPLinha INT NULL,
  ISC_ID INT NOT NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (LIN_ID),
  CONSTRAINT fk_T_Linha_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Linha_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Linha_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Linha_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Linha_T_Isca1
    FOREIGN KEY (ISC_ID)
    REFERENCES T_Isca (ISC_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Linha_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Linha_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Linha_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  LIN_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Calao1
    FOREIGN KEY (LIN_ID)
    REFERENCES T_Linha (LIN_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Linha_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Linha_has_T_Pesqueiro (
  LIN_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  LIN_PAF_TempoAPesqueiro TIME NULL,
  PRIMARY KEY (LIN_ID),
  CONSTRAINT fk_T_Tarrafa_has_T_Pesqueiro_T_Linha1
    FOREIGN KEY (LIN_ID)
    REFERENCES T_Linha (LIN_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Tarrafa_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Grosseira
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Grosseira (
  GRS_ID serial,
  GRS_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  GRS_NumPescadores INT NULL,
  GRS_DHSaida TIMESTAMP NOT NULL,
  GRS_DHVolta TIMESTAMP NULL,
  GRS_Diesel FLOAT NULL,
  GRS_Oleo FLOAT NULL,
  GRS_Alimento FLOAT NULL,
  GRS_Gelo FLOAT NULL,
  GRS_Avistou VARCHAR(100) NULL,
  GRS_NumLinhas INT NULL,
  GRS_NumAnzoisPLinha INT NULL,
  GRS_Subamostra boolean NULL,
  SA_SubID INT NULL,
  ISC_ID INT NOT NULL,
  GRS_OBS VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (GRS_ID),
  CONSTRAINT fk_T_Grosseira_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_T_Isca1
    FOREIGN KEY (ISC_ID)
    REFERENCES T_Isca (ISC_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Grosseira_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Grosseira_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  GRS_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Grosseira1
    FOREIGN KEY (GRS_ID)
    REFERENCES T_Grosseira (GRS_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

    

-- -----------------------------------------------------
-- Table T_Grosseira_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Grosseira_has_T_Pesqueiro (
  GRS_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  GRS_PAF_TempoAPesqueiro TIME NULL,
  PRIMARY KEY (GRS_ID),
  CONSTRAINT fk_T_Grosseira_has_T_Pesqueiro_T_Grosseira1
    FOREIGN KEY (GRS_ID)
    REFERENCES T_Grosseira (GRS_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Grosseira_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Mergulho
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Mergulho (
  MER_ID serial,
  MER_Embarcada boolean NULL,
  BAR_ID INT NOT NULL,
  TTE_ID INT NOT NULL,
  TP_ID INT NOT NULL,
  MER_QuantPescadores INT NULL,
  MER_DHSaida TIMESTAMP NULL,
  MER_DHVolta TIMESTAMP NULL,
  MER_TempoGasto TIME NULL,
  MER_Avistou VARCHAR(100) NULL,
  MER_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  MNT_ID INT NOT NULL,
  MER_OBS VARCHAR(100) NULL,
  PRIMARY KEY (MER_ID),
  CONSTRAINT fk_T_Mergulho_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_T_Monitoramento1
    FOREIGN KEY (MNT_ID)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Mergulho_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Mergulho_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  MER_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Mergulho1
    FOREIGN KEY (MER_ID)
    REFERENCES T_Mergulho (MER_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

    

-- -----------------------------------------------------
-- Table T_Mergulho_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Mergulho_has_T_Pesqueiro (
  T_Mergulho_MER_ID INT NOT NULL,
  T_Pesqueiro_AF_PAF_ID INT NOT NULL,
  MER_PAF_TempoAPesqueiro TIME NULL,
  MER_PAF_DistAPesqueiro FLOAT NULL,
  PRIMARY KEY (T_Mergulho_MER_ID),
  CONSTRAINT fk_T_Mergulho_has_T_Pesqueiro_T_Mergulho1
    FOREIGN KEY (T_Mergulho_MER_ID)
    REFERENCES T_Mergulho (MER_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Mergulho_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (T_Pesqueiro_AF_PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_ColetaManual
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ColetaManual (
  CML_ID serial,
  CML_Embarcada boolean NULL,
  BAR_ID INT NOT NULL,
  TTE_ID INT NOT NULL,
  TP_ID_Entrevistado INT NOT NULL,
  CML_QuantPescadores INT NULL,
  CML_DHSaida TIMESTAMP NULL,
  CML_DHVolta TIMESTAMP NULL,
  CML_TempoGasto TIME NULL,
  CML_Avistamento VARCHAR(100) NULL,
  CML_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  CML_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (CML_ID),
  CONSTRAINT fk_T_ColetaManual_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_T_Pescador1
    FOREIGN KEY (TP_ID_Entrevistado)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_ColetaManual_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ColetaManual_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  CML_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_ColetaManual1
    FOREIGN KEY (CML_ID)
    REFERENCES T_ColetaManual (CML_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_ColetaManual_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_ColetaManual_has_T_Pesqueiro (
  CML_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  CML_PAF_TempoAPesqueiro TIME NULL,
  CML_PAF_DistAPesqueiro FLOAT NULL,
  PRIMARY KEY (CML_ID),
  CONSTRAINT fk_T_ColetaManual_has_T_Pesqueiro_T_ColetaManual1
    FOREIGN KEY (CML_ID)
    REFERENCES T_ColetaManual (CML_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_ColetaManual_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_VaraPesca
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VaraPesca (
  VP_ID serial,
  VP_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  VP_QuantPescadores INT NULL,
  VP_DHSaida TIMESTAMP NULL,
  VP_DHVolta TIMESTAMP NULL,
  VP_TempoGasto TIME NULL,
  VP_Diesel FLOAT NULL,
  VP_Oleo FLOAT NULL,
  VP_Alimento FLOAT NULL,
  VP_Gelo FLOAT NULL,
  VP_Avistamento VARCHAR(100) NULL,
  VP_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NULL,
  VP_NumAnzoisPLinha INT NULL,
  VP_NumLinhas INT NULL,
  ISC_ID INT NULL,
  VP_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (VP_ID),
  CONSTRAINT fk_T_VaraPesca_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_Isca1
    FOREIGN KEY (ISC_ID)
    REFERENCES T_Isca (ISC_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_T_Monitoramento1
    FOREIGN KEY (MNT_ID)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_VaraPesca_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VaraPesca_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  VP_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_VaraPesca1
    FOREIGN KEY (VP_ID)
    REFERENCES T_VaraPesca (VP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_VaraPesca_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_VaraPesca_has_T_Pesqueiro (
  VP_ID INT NOT NULL,
  AF_PAF_ID INT NOT NULL,
  VP_PAF_TempoAPesqueiro TIME NULL,
  VP_PAF_DistAPesqueiro FLOAT NULL,
  PRIMARY KEY (VP_ID),
  CONSTRAINT fk_T_VaraPesca_has_T_Pesqueiro_T_VaraPesca1
    FOREIGN KEY (VP_ID)
    REFERENCES T_VaraPesca (VP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_VaraPesca_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (AF_PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_LinhaFundo
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LinhaFundo (
  LF_ID serial,
  LF_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  LF_QuantPescadores INT NULL,
  LF_DHSaida TIMESTAMP NULL,
  LF_DHVolta TIMESTAMP NULL,
  LF_TempoGasto TIME NULL,
  LF_Diesel FLOAT NULL,
  LF_Oleo FLOAT NULL,
  LF_Alimento FLOAT NULL,
  LF_Gelo FLOAT NULL,
  LF_Avistamento VARCHAR(100) NULL,
  LF_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NULL,
  LF_NumLinhas INT NULL,
  LF_NumAnzoisPLinha INT NULL,
  ISC_ID INT NULL,
  LF_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (LF_ID),
  CONSTRAINT fk_T_LinhaFundo_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_Isca1
    FOREIGN KEY (ISC_ID)
    REFERENCES T_Isca (ISC_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_T_Monitoramento1
    FOREIGN KEY (MNT_ID)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_LinhaFundo_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LinhaFundo_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  LF_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_LinhaFundo1
    FOREIGN KEY (LF_ID)
    REFERENCES T_LinhaFundo (LF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_LinhaFundo_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_LinhaFundo_has_T_Pesqueiro (
  LF_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  LF_PAF_TempoAPesqueiro TIME NULL,
  LF_PAF_DistAPesqueiro FLOAT NULL,
  PRIMARY KEY (LF_ID),
  CONSTRAINT fk_T_LinhaFundo_has_T_Pesqueiro_T_LinhaFundo1
    FOREIGN KEY (LF_ID)
    REFERENCES T_LinhaFundo (LF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_LinhaFundo_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Jerere
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Jerere (
  JRE_ID serial,
  JRE_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  JRE_QuantPescadores INT NULL,
  JRE_DHSaida TIMESTAMP NULL,
  JRE_DHVolta TIMESTAMP NULL,
  JRE_TempoGasto TIME NULL,
  JRE_Avistamento VARCHAR(100) NULL,
  JRE_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  JRE_NumArmadilhas INT NULL,
  JRE_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (JRE_ID),
  CONSTRAINT fk_T_Jerere_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
    CONSTRAINT fk_T_Jerere_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Jerere_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Jerere_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Jerere_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Jerere_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Jerere_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Jerere_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  JRE_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Jerere1
    FOREIGN KEY (JRE_ID)
    REFERENCES T_Jerere (JRE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


    
-- -----------------------------------------------------
-- Table T_Jerere_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Jerere_has_T_Pesqueiro (
  JRE_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  JRE_PAF_TempoAPesqueiro TIME NULL,
  JRE_PAF_DistAPesqueiro FLOAT NULL,
  CONSTRAINT fk_T_Jerere_has_T_Pesqueiro_T_Jerere1
    FOREIGN KEY (JRE_ID)
    REFERENCES T_Jerere (JRE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Jerere_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_Siripoia
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Siripoia (
  SIR_ID serial,
  SIR_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  SIR_QuantPescadores INT NULL,
  SIR_DHSaida TIMESTAMP NULL,
  SIR_DHVolta TIMESTAMP NULL,
  SIR_TempoGasto TIME NULL,
  SIR_Avistamento VARCHAR(100) NULL,
  SIR_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  SIR_NumArmadilhas INT NULL,
  SIR_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (SIR_ID),
  CONSTRAINT fk_T_Siripoia_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_Siripoia_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Siripoia_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  SIR_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Siripoia1
    FOREIGN KEY (SIR_ID)
    REFERENCES T_Siripoia (SIR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Siripoia_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Siripoia_has_T_Pesqueiro (
  SIR_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  SIR_PAF_TempoAPesqueiro TIME NULL,
  SIR_PAF_DistAPesqueiro FLOAT NULL,
  CONSTRAINT fk_T_Siripoia_has_T_Pesqueiro_T_Siripoia1
    FOREIGN KEY (SIR_ID)
    REFERENCES T_Siripoia (SIR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Siripoia_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
	
-- -----------------------------------------------------
-- Table T_Manzua
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Manzua (
  MAN_ID serial,
  MAN_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  MAN_QuantPescadores INT NULL,
  MAN_DHSaida TIMESTAMP NULL,
  MAN_DHVolta TIMESTAMP NULL,
  MAN_TempoGasto TIME NULL,
  MAN_Avistamento VARCHAR(100) NULL,
  MAN_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  MAN_NumArmadilhas INT NULL,
  MAN_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (Man_ID),
  CONSTRAINT fk_T_Manzua_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

-- -----------------------------------------------------
-- Table T_Manzua_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Manzua_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  MAN_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Manzua1
    FOREIGN KEY (MAN_ID)
    REFERENCES T_Manzua (MAN_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Manzua_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Manzua_has_T_Pesqueiro (
  Man_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  Man_PAF_TempoAPesqueiro TIME NULL,
  Man_PAF_DistAPesqueiro FLOAT NULL,
  CONSTRAINT fk_T_Manzua_has_T_Pesqueiro_T_Manzua1
    FOREIGN KEY (Man_ID)
    REFERENCES T_Manzua (Man_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Manzua_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
	
-- -----------------------------------------------------
-- Table T_Ratoeira
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Ratoeira (
  RAT_ID serial,
  RAT_Embarcada boolean NULL,
  BAR_ID INT NULL,
  TTE_ID INT NULL,
  TP_ID INT NOT NULL,
  RAT_QuantPescadores INT NULL,
  RAT_DHSaida TIMESTAMP NULL,
  RAT_DHVolta TIMESTAMP NULL,
  RAT_TempoGasto TIME NULL,
  RAT_Avistamento VARCHAR(100) NULL,
  RAT_Subamostra boolean NULL,
  SA_SubID INT NULL,
  MR_ID INT NOT NULL,
  RAT_NumArmadilhas INT NULL,
  RAT_Obs VARCHAR(100) NULL,
  MNT_ID INT NOT NULL,
  PRIMARY KEY (RAT_ID),
  CONSTRAINT fk_T_Ratoeira_T_Barco1
    FOREIGN KEY (BAR_ID)
    REFERENCES T_Barco (BAR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_T_Subamostra1
    FOREIGN KEY (SA_SubID)
    REFERENCES T_Subamostra (SA_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_T_TipoEmbarcacao1
    FOREIGN KEY (TTE_ID)
    REFERENCES T_TipoEmbarcacao (TTE_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_T_Pescador1
    FOREIGN KEY (TP_ID)
    REFERENCES T_Pescador (TP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_T_Mare1
    FOREIGN KEY (MR_ID)
    REFERENCES T_Mare (MR_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_T_Monitoramento1
    FOREIGN KEY (mnt_id)
    REFERENCES T_Monitoramento (MNT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table T_Ratoeira_has_T_Especie_Capturada
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Ratoeira_has_T_Especie_Capturada (
  SPC_ID serial,
  SPC_Nome VARCHAR(45) NULL,
  SPC_Quantidade INT NULL,
  SPC_Peso_kg INT NULL,
  SPC_Preco DECIMAL(5) NULL,
  ESP_ID INT NOT NULL,
  RAT_ID INT NOT NULL,
  PRIMARY KEY (SPC_ID),
  CONSTRAINT fk_DSBQ_Especie_Capturada_DSBQ_Especie1
    FOREIGN KEY (ESP_ID)
    REFERENCES T_Especie (ESP_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Especie_Capturada_T_Ratoeira1
    FOREIGN KEY (RAT_ID)
    REFERENCES T_Ratoeira (RAT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);



-- -----------------------------------------------------
-- Table T_Ratoeira_has_T_Pesqueiro
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS T_Ratoeira_has_T_Pesqueiro (
  RAT_ID INT NOT NULL,
  PAF_ID INT NOT NULL,
  RAT_PAF_TempoAPesqueiro TIME NULL,
  RAT_PAF_DistAPesqueiro FLOAT NULL,
  CONSTRAINT fk_T_Ratoeira_has_T_Pesqueiro_T_Ratoeira1
    FOREIGN KEY (RAT_ID)
    REFERENCES T_Ratoeira (RAT_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_T_Ratoeira_has_T_Pesqueiro_T_Pesqueiro_AF1
    FOREIGN KEY (PAF_ID)
    REFERENCES T_Pesqueiro_AF (PAF_ID)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
	
